//#東方弾幕風
#ScriptVersion[3]
#Title["桃源宮　stage7　会話　布都　戦闘後"]
#Text[""]
#System["script/Th_rss/system/System_Main.dnh"]
#Image[""]
#Background[""]
	
	//　ライブラリ管理ファイル
	#include "./../lib_Control.dnh"
	#include "./lib_enm07_setting.dnh"
	#include "./../../lib/lib_balloon.dnh"
	
	let enm;
	let spl;
	
	//　カウンタ
	let frame		= 0;
	let count		= 0;
	let timer		= 0;
	
	//　制限時間
	let SET_TIMER	= 999;
	
	@Initialize{
		//　ボス生成
		enm	= ObjEnemy_Create(OBJ_ENEMY_BOSS);
		ObjEnemy_SetDamageRate(enm, 0, 0 );
		ObjEnemy_Regist(enm);
		
		//　画面外で待機
		ObjMove_SetPosition(enm, MaxX+128, MinY-128 );
		
		//　初期化
		EnemyInitialize(enm);
		
		//　体力0まで待機
		EndEnemy_Event(enm);
		
		//　削除上限
		SetShotAutoDeleteClip( 64, 64, 64, 64 );
	}
	
	@Loading{ }
	
	@MainLoop{
		
		//　会話タスク呼び出し
		if( frame == 120 ){
			Main(enm);
		}
		
		//　カウンタ
		if( !Obj_IsDeleted(enm) ){
			count++;
			frame++;
			timer++;
		}
		else{
			//　0でなんか発動すると困るので変な数値にする
			count	= -52149;
			frame	= -52149;
			timer	= -52149;
		}
		
		yield;
	}
	
	@Event{
		alternative( GetEventType() )
		case( EV_REQUEST_LIFE ){
			//　ライフ一律1000
			SetScriptResult( 1000 );
		}
	}
	
	@Finalize{ }
	
	//----------------------------------------------------------------------------------------------------
	//----------------------------------------------------------------------------------------------------
	//　task色々
	
	task EnemyInitialize(ID){
		//　アニメーション用共通データ作成
		CreateCommonDataArea("anime");
		SetAreaCommonData("anime","spa",false);
		
		//　画像パスだけ変えればいいんじゃないかな
		EnemyDisplay_Enm07b(enm, true, enemy_tex_path );
	}
	
	function wait( long ){
		loop( long ){ yield; }
	}
	
	task Main(CallID){
		let frame	= 0;
		let count	= 0;
		let ctr		= 0;
		let mpos	= [ 0, 24 ];
		
		let enm_pos = [ 300, 64 ];
		
		//　自機組のテクスチャ　01がプレイヤー　02がパートナー
		let player_texture01 = [
			player_tex[37],player_tex[38],player_tex[39],player_tex[40],player_tex[41],
			player_tex[42],player_tex[43],player_tex[44],player_tex[45],player_tex[46],
			player_tex[47],
		];
		let player_texture02 = [
			player_tex[31],player_tex[32],player_tex[33],player_tex[34],player_tex[35],
			player_tex[36],
		];
		
		//　敵のテクスチャ
		let enemy_texture01 = [
			chara_tex[54],chara_tex[55],chara_tex[56],chara_tex[57],chara_tex[58],
			chara_tex[59],chara_tex[60],chara_tex[61],chara_tex[62],
		];
		
		//　共通データ作成　会話カウンタ作成
		CreateCommonDataArea("Talk");
		SetAreaCommonData("Talk", "counter", count );
		
		while( !Obj_IsDeleted(CallID) ){
			SetForbidPlayerShot( true );
			SetForbidPlayerSpell( true );
			
			//　会話表示
			if( frame == 1 ){
				alternative( count )
				case( 0 ){
					let text = [
/* to be translated */						"竜退治の英雄でも何でも勝手に名乗れよ。",
/* to be translated */						"お姫様はつかないぞ",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [true,false], "back", false, [0,0,0], 1, count, player_texture01[0], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [true,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [true,false], "front", false, [0,0,0], 1, count, enemy_texture01[8], 512 );
					CreateBalloonManager_Reverse( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 1 ){
					let text = [
/* to be translated */						"太子様、我、",
/* to be translated */						"今いみじく酷い事を言われた気がしますぞ",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, player_texture01[6], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, enemy_texture01[8], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+96+mpos[1] ], 3, text, count, 0 );
				}
				case( 2 ){
					let text = [
/* to be translated */						"気にするな、お前はお前だ、胸を張れ",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[6], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[8], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 3, text, count, 1 );
				}
				case( 3 ){
					let text = [
/* to be translated */						"太子様まで我の胸を剣の如く抉るのですか",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, player_texture01[7], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[8], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+96+mpos[1] ], 3, text, count, 0 );
				}
				case( 4 ){
					let text = [
/* to be translated */						"くそ、こんな連中に負けるようでは、",
/* to be translated */						"草薙の剣を取り戻すなど夢のまた夢か。",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[7], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, enemy_texture01[8], 512 );
					CreateBalloonManager_Reverse( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 5 ){
					let text = [
/* to be translated */						"私はこれから一体どう生きて行けば良いんだ",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[7], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", false, [0,0,0], 1, count, enemy_texture01[8], 512 );
					CreateBalloonManager_Reverse( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 6 ){
					let text = [
/* to be translated */						"おぬし…",
/* to be translated */						"その鍛冶の能力を里の民の為に活かしてはどうか？",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, player_texture01[10], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, enemy_texture01[8], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+96+mpos[1] ], 4, text, count, 0 );
				}
				case( 7 ){
					let text = [
/* to be translated */						"刃物は刀剣ばかりに非ず、鋏に包丁に農具、",
/* to be translated */						"民草の何気ない生活の中にもこれだけ必要な物ぞ。",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "front", false, [0,0,0], 1, count, player_texture01[10], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[8], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+96+mpos[1] ], 4, text, count, 0 );
				}
				case( 8 ){
					let text = [
/* to be translated */						"そうして人気を集めて行けば、",
/* to be translated */						"いずれおぬし一人でも八人力となる日も来よう",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "front", false, [0,0,0], 1, count, player_texture01[5], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[8], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+96+mpos[1] ], 4, text, count, 0 );
				}
				case( 9 ){
					let text = [
/* to be translated */						"　お前…私の事をそんなに。",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[5], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, enemy_texture01[8], 512 );
					CreateBalloonManager_Reverse( [ CenX+32+mpos[0], CenY+32+mpos[1] ], 2, text, count, 0 );
				}
				case( 10 ){
					let text = [
/* to be translated */						"そうか、お前がそう言うならやってみるか、",
/* to be translated */						"平和な世界の刀鍛冶",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[5], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", false, [0,0,0], 1, count, enemy_texture01[8], 512 );
					CreateBalloonManager_Reverse( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 11 ){
					let text = [
/* to be translated */						"…あとは気取られずに我らが利用する。",
/* to be translated */						"それで良いのですな、太子様？",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, player_texture01[9], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, enemy_texture01[8], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+96+mpos[1] ], 3, text, count, 0 );
				}
				case( 12 ){
					let text = [
/* to be translated */						"お前もこたびの件で随分成長したものだ",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[9], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 0.48, count, player_texture02[2], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[8], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 3, text, count, 1 );
				}
				others{
					SetAreaCommonData("Talk", "counter", 0 );
					ObjEnemy_SetLife( CallID, 0 );
					break;
				}
			}
			
			//　カウンタ加算
			frame++;
			if( ObjMove_GetSpeed(CallID) <= 0 ){ ctr++; }
			else{ ctr = 0; }
			
			//　ｼｮｯﾄｷｰで会話進行
			if( GetVirtualKeyState(VK_SHOT) == KEY_PUSH && ctr > 8 ){
				count++;
				frame = 0;
				ctr = 0;
				SetAreaCommonData("Talk", "counter", count );
			}
			
			//　ショットキー長押しで会話早送り
			if( GetVirtualKeyState(VK_USER1) == KEY_HOLD ){ timer++; }
			else{ timer = 0; }
			if( timer > 50 && ctr > 4 ){
				count++;
				frame = 0;
				ctr = 0;
				SetAreaCommonData("Talk", "counter", count );
			}
			
			yield;
		}
		SetForbidPlayerShot( false );
		SetForbidPlayerSpell( false );
	}
	
