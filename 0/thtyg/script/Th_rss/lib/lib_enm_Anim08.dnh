


//　敵テクスチャ作成清妃用
//------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------

//　ボステクスチャ
function EnemyDisplay_Enm08a( ID, float_frag, path ){
	let obj			= ObjPrim_Create(OBJ_SPRITE_2D);
	let EnmX		= ObjMove_GetX(ID);
	let EnmY		= ObjMove_GetY(ID);
	let sca			= 0.9;
	
	ObjRender_SetPosition(obj, EnmX, EnmY, 0 );
	ObjPrim_SetTexture(obj, path );
	Obj_SetRenderPriorityI(obj, 41 );
	ObjRender_SetBlendType(obj, BLEND_ALPHA );
	ObjRender_SetScaleXYZ(obj, sca, sca, 0 );
	ObjSprite2D_SetSourceRect(obj, 0, 0, 128, 128 );
	ObjSprite2D_SetDestCenter(obj);
	
	EnemyDisplay_Anime_Enm08a( ID, obj, float_frag, path );
	
	return obj;
}

//　敵アニメーション本体　新ver
task EnemyDisplay_Anime_Enm08a( ID, obj, float_frag, path ){
	let floath		= 0;
	let A_count		= 0;
	let AR_count	= 0;
	let AL_count	= 0;
	let A_returnR	= 0;
	let A_returnL	= 0;
	let rotationY	= 0;
	let sp			= 0;
	let EnmX		= ObjMove_GetX(ID);
	let EnmY		= ObjMove_GetY(ID);
	let GetSpeedX	= ObjMove_GetSpeed(ID) * cos( ObjMove_GetAngle(ID) );
	let GetSpeedY	= ObjMove_GetSpeed(ID) * sin( ObjMove_GetAngle(ID) );
	let hc			= 8;
	
	let spin		= 0;
	
	/*アニメーション*/
	task Animation(){
		if( GetSpeedX == 0 ){ A_count ++; }
		if( A_count >= 60 ){ A_count = 0; }
		if( GetSpeedX == 0 ){
			if( AL_count > 0 ){
				A_returnL ++;
				//　左移動→待機への変化速度
				if( A_returnL %1 == 0 ){
					AL_count --;
				}
			}
			else{
				AL_count = 0;
				A_returnL = 0;
			}
			if( AR_count > 0 ){
				A_returnR ++;
				//　右移動→待機への変化速度
				if( A_returnR %1 == 0 ){
					AR_count --;
				}
			}
			else{
				AR_count = 0;
				A_returnR = 0;
			}
		}
		if( GetSpeedX < 0 ){
			AL_count ++;
		}
		if( GetSpeedX > 0 ){
			AR_count ++;
		}
		if( AL_count >= 20 ){ AL_count = 15; }
		if( AR_count >= 20 ){ AR_count = 15; }
	}
	
	while( !Obj_IsDeleted(ID) ){
		//現在出現しているボスのidから云々
		GetSpeedX		= ObjMove_GetSpeed(ID) * cos( ObjMove_GetAngle(ID) );
		GetSpeedY		= ObjMove_GetSpeed(ID) * sin( ObjMove_GetAngle(ID) );
		let EnmX		= ObjMove_GetX(ID);
		let EnmY		= ObjMove_GetY(ID);
		let loa			= GetAreaCommonData("anime", "loa", false );
		let spa			= GetAreaCommonData("anime", "spa", false );
		let alpha		= GetAreaCommonData("anime", "alpha", 255 );
		
		ObjRender_SetAlpha(obj, alpha );
		
		if( GetSpeedX == 0 && AL_count == 0 && AR_count == 0 ){
			ObjRender_SetAngleXYZ(obj, 0, rotationY, 0 );
			if( A_count >= 0  && A_count < 30 ){ ObjSprite2D_SetSourceRect(obj, 0, 0, 128, 128 );}
			if( A_count >= 30 && A_count < 60 ){ ObjSprite2D_SetSourceRect(obj, 128, 0, 256, 128 );}
		}
		//　右
		if( GetSpeedX > 0 || AR_count > 0 ){
			rotationY = 0;
			sp = 0;
			if( spa ){
				ObjRender_SetAngleXYZ(obj, 0, 0, 0 );
			}
			else{
				ObjRender_SetAngleXYZ(obj, 0, 0, 0 );
			}
			if( AR_count >= 0  && AR_count < 5  ){ ObjSprite2D_SetSourceRect(obj, 0, 256, 128, 384 ); }
			if( AR_count >= 5  && AR_count < 10 ){ ObjSprite2D_SetSourceRect(obj, 128, 256, 256, 384 ); }
			if( AR_count >= 10 && AR_count < 15 ){ ObjSprite2D_SetSourceRect(obj, 256, 256, 384, 384 ); }
			if( AR_count >= 15 && AR_count < 20 ){ ObjSprite2D_SetSourceRect(obj, 384, 256, 512, 384 ); }
		}
		//　左
		if( GetSpeedX < 0 || AL_count > 0 ){
			rotationY = 0;
			sp = 0;
			if( spa ){
				ObjRender_SetAngleXYZ(obj, 0, 0, 0 );
			}
			else{
				ObjRender_SetAngleXYZ(obj, 0, 0, 0 );
			}
			if( AL_count >= 0  && AL_count < 5  ){ ObjSprite2D_SetSourceRect(obj, 0, 128, 128, 256 ); }
			if( AL_count >= 5  && AL_count < 10 ){ ObjSprite2D_SetSourceRect(obj, 128, 128, 256, 256 ); }
			if( AL_count >= 10 && AL_count < 15 ){ ObjSprite2D_SetSourceRect(obj, 256, 128, 384, 256 ); }
			if( AL_count >= 15 && AL_count < 20 ){ ObjSprite2D_SetSourceRect(obj, 384, 128, 512, 256 ); }
		}
		
		//　特殊
		if( GetSpeedX == 0 && GetSpeedY == 0 ){
			if( loa || spa ){
				if( !spa && sp >= 20 ){ sp = 15; }
				if( sp >= 75 ){ sp = 65; }
				
				if( sp >= 0  && sp < 5 ){ ObjSprite2D_SetSourceRect( obj, 0, 384, 128, 512 ); }
				if( sp >= 5  && sp < 10 ){ ObjSprite2D_SetSourceRect( obj, 128, 384, 256, 512 ); }
				if( sp >= 10 && sp < 15 ){ ObjSprite2D_SetSourceRect( obj, 256, 384, 384, 512 ); }
				if( sp >= 15 && sp < 20 ){ ObjSprite2D_SetSourceRect( obj, 384, 384, 512, 512 ); }	//　溜め
				if( sp >= 20 && sp < 25 ){ ObjSprite2D_SetSourceRect( obj, 0, 512, 128, 640 ); }
				if( sp >= 25 && sp < 30 ){ ObjSprite2D_SetSourceRect( obj, 128, 512, 256, 640 ); }
				if( sp >= 30 && sp < 35 ){ ObjSprite2D_SetSourceRect( obj, 256, 512, 384, 640 ); }
				if( sp >= 35 && sp < 40 ){ ObjSprite2D_SetSourceRect( obj, 384, 512, 512, 640 ); }
				if( sp >= 40 && sp < 45 ){ ObjSprite2D_SetSourceRect( obj, 512, 512, 640, 640 ); }
				if( sp >= 45 && sp < 50 ){ ObjSprite2D_SetSourceRect( obj, 640, 512, 768, 640 ); }
				if( sp >= 50 && sp < 55 ){ ObjSprite2D_SetSourceRect( obj, 768, 512, 896, 640 ); }
				if( sp >= 55 && sp < 60 ){ ObjSprite2D_SetSourceRect( obj, 896, 512, 1024, 640 ); }
				if( sp >= 60 && sp < 65 ){ ObjSprite2D_SetSourceRect( obj, 0, 640, 128, 768 ); }
				if( sp >= 65 && sp < 70 ){ ObjSprite2D_SetSourceRect( obj, 128, 640, 256, 768 ); }
				if( sp >= 70 && sp < 75 ){ ObjSprite2D_SetSourceRect( obj, 256, 640, 384, 768 ); }	//　火炎晴明紋
				sp++;
			}
			if( !loa && !spa && sp > 0 ){
				//　修正
				if( sp == 20 ){ sp = 19; }
				
				if( sp >= 0  && sp < 5 ){ ObjSprite2D_SetSourceRect( obj, 0, 384, 128, 512 ); }
				if( sp >= 5  && sp < 10 ){ ObjSprite2D_SetSourceRect( obj, 128, 384, 256, 512 ); }
				if( sp >= 10 && sp < 15 ){ ObjSprite2D_SetSourceRect( obj, 256, 384, 384, 512 ); }
				if( sp >= 15 && sp < 20 ){ ObjSprite2D_SetSourceRect( obj, 384, 384, 512, 512 ); }	//　溜め
				if( sp >= 20 && sp < 25 ){ ObjSprite2D_SetSourceRect( obj, 0, 512, 128, 640 ); }
				if( sp >= 25 && sp < 30 ){ ObjSprite2D_SetSourceRect( obj, 128, 512, 256, 640 ); }
				if( sp >= 30 && sp < 35 ){ ObjSprite2D_SetSourceRect( obj, 256, 512, 384, 640 ); }
				if( sp >= 35 && sp < 40 ){ ObjSprite2D_SetSourceRect( obj, 384, 512, 512, 640 ); }
				if( sp >= 40 && sp < 45 ){ ObjSprite2D_SetSourceRect( obj, 512, 512, 640, 640 ); }
				if( sp >= 45 && sp < 50 ){ ObjSprite2D_SetSourceRect( obj, 640, 512, 768, 640 ); }
				if( sp >= 50 && sp < 55 ){ ObjSprite2D_SetSourceRect( obj, 768, 512, 896, 640 ); }
				if( sp >= 55 && sp < 60 ){ ObjSprite2D_SetSourceRect( obj, 896, 512, 1024, 640 ); }
				if( sp >= 60 && sp < 65 ){ ObjSprite2D_SetSourceRect( obj, 0, 640, 128, 768 ); }
				if( sp >= 65 && sp < 70 ){ ObjSprite2D_SetSourceRect( obj, 128, 640, 256, 768 ); }
				if( sp >= 70 && sp < 75 ){ ObjSprite2D_SetSourceRect( obj, 256, 640, 384, 768 ); }	//　火炎晴明紋
				if( sp >= 75 && sp < 80 ){ ObjSprite2D_SetSourceRect( obj, 0, 768, 128, 896 ); }
				if( sp >= 80 && sp < 85 ){ ObjSprite2D_SetSourceRect( obj, 128, 768, 256, 896 ); }
				if( sp >= 85 && sp < 90 ){ ObjSprite2D_SetSourceRect( obj, 256, 768, 384, 896 ); }
				if( sp >= 90 && sp < 95 ){ ObjSprite2D_SetSourceRect( obj, 384, 768, 512, 896 ); }
				if( sp >= 95 && sp < 100 ){ ObjSprite2D_SetSourceRect( obj, 512, 768, 640, 896 ); }	//　補間
				
				if( sp < 20 ){ sp--; }
				else if( sp >= 20 && sp < 100 ){ sp++; }
				else{ sp = 0; }
			}
		}
		ObjSprite2D_SetDestCenter( obj );
		
		if( float_frag && GetSpeedX == 0 ){
			ObjRender_SetPosition(obj, EnmX, EnmY + 4 * sin(floath*3), 0 );
			floath++;
		}
		else{
			ObjRender_SetPosition(obj, EnmX, EnmY + 4 * sin(floath*3), 0 );
		}
		
		Animation();
		
		spin++;
		
		yield;
	}
	Obj_Delete(obj);
}
