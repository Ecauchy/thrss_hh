//#東方弾幕風
#ScriptVersion[3]
#Title["桃源宮　stage4　会話　霊夢"]
#Text[""]
#System["script/Th_rss/system/System_Main.dnh"]
#Image[""]
#Background[""]
	
	//　ライブラリ管理ファイル
	#include "./../lib_Control.dnh"
	#include "./lib_enm04_setting.dnh"
	#include "./../../lib/lib_balloon.dnh"
	
	let enm;
	let spl;
	
	//　カウンタ
	let frame		= 0;
	let count		= 0;
	let timer		= 0;
	
	//　制限時間
	let SET_TIMER	= 999;
	
	@Initialize{
		//　ボス生成
		enm	= ObjEnemy_Create(OBJ_ENEMY_BOSS);
		ObjEnemy_SetDamageRate(enm, 0, 0 );
		ObjEnemy_Regist(enm);
		
		//　画面外で待機
		ObjMove_SetPosition(enm, MaxX+128, MinY-128 );
		
		//　初期化
		EnemyInitialize(enm);
		
		//　体力0まで待機
		EndEnemy_Event(enm);
		
		//　削除上限
		SetShotAutoDeleteClip( 64, 64, 64, 64 );
	}
	
	@Loading{ }
	
	@MainLoop{
		
		//　会話タスク呼び出し
		if( frame == 120 ){
			Main(enm);
		}
		
		//　カウンタ
		if( !Obj_IsDeleted(enm) ){
			count++;
			frame++;
			timer++;
		}
		else{
			//　0でなんか発動すると困るので変な数値にする
			count	= -52149;
			frame	= -52149;
			timer	= -52149;
		}
		
		yield;
	}
	
	@Event{
		alternative( GetEventType() )
		case( EV_REQUEST_LIFE ){
			//　ライフ一律1000
			SetScriptResult( 1000 );
		}
	}
	
	@Finalize{ }
	
	//----------------------------------------------------------------------------------------------------
	//----------------------------------------------------------------------------------------------------
	//　task色々
	
	task EnemyInitialize(ID){
		//　アニメーション用共通データ作成
		CreateCommonDataArea("anime");
		SetAreaCommonData("anime","spa",false);
		
		//　画像パスだけ変えればいいんじゃないかな
		EnemyDisplay_Enm04a( enm, true, enemy_tex_path );
	}
	
	function wait( long ){
		loop( long ){ yield; }
	}
	
	task Main(CallID){
		let frame	= 0;
		let count	= 0;
		let ctr		= 0;
		let mpos	= [ 0, 24 ];
		
		let enm_pos = [ 280, 64 ];
		
		//　自機組のテクスチャ　01がプレイヤー　02がパートナー
		let player_texture01 = [
			player_tex[0],player_tex[1],player_tex[2],player_tex[3],player_tex[4],
			player_tex[5],player_tex[6],player_tex[7],player_tex[8],player_tex[9],
		];
		let player_texture02 = [
			player_tex[10],player_tex[11],player_tex[12],player_tex[13],
		];
		
		//　敵のテクスチャ
		let enemy_texture01 = [
			chara_tex[32],chara_tex[33],chara_tex[34],chara_tex[35],chara_tex[36],
			chara_tex[37],chara_tex[38],
		];
		
		//　共通データ作成　会話カウンタ作成
		CreateCommonDataArea("Talk");
		SetAreaCommonData("Talk", "counter", count );
		
		while( !Obj_IsDeleted(CallID) ){
			SetForbidPlayerShot( true );
			SetForbidPlayerSpell( true );
			
			//　会話表示
			if( frame == 1 ){
				alternative( count )
				case( 0 ){
					let text = [
/* to be translated */						"何これ、いったい湖の何倍の大きさよ",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [true,false], "front", false, [0,0,0], 1, count, player_texture01[3], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [true,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 1 ){
					let text = [
/* to be translated */						"いやーんこれは海だわ、たすけてー",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[3], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 0.48, count, player_texture02[1], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 3, text, count, 1 );
				}
				case( 2 ){
					let text = [
/* to be translated */						"海？",
/* to be translated */						"あぁ、来そうで中々来ないっていつも言ってる",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 0.48, count, player_texture02[1], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 4, text, count, 0 );
				}
				case( 3 ){
					let text = [
/* to be translated */						"こんな物を幻想郷に持ち込もうなんて、",
/* to be translated */						"結界が悲鳴を上げるのも当然よ",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 3, text, count, 1 );
				}
				case( 4 ){
					let text = [
/* to be translated */						"それはすまない事をしたと思っている",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateBalloonManager_Reverse( [ CenX+mpos[0], CenY-128+mpos[1] ], 3, text, count, 0 );
				}
				case( 5 ){
				}
				case( 6 ){
					let text = [
/* to be translated */						"だが、無理を承知で敢えて通りたいのだ",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [true,false], "back", false, [0,0,0], 1, count, player_texture01[0], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [true,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [true,false], "front", true, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager_Reverse( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 7 ){
					let text = [
/* to be translated */						"またチビが黒幕？",
/* to be translated */						"誰に煽動されたの？",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, player_texture01[2], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 1, text, count, 0 );
				}
				case( 8 ){
					let text = [
/* to be translated */						"　私は草薙の剣を継ぐ者、水天宮皇女",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[2], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager_Reverse( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
					DisplayEnemyName01( enm, [ 340+mpos[0], 200+mpos[1] ], 4, 180 );
				}
				case( 9 ){
					let text = [
/* to be translated */						"水天狗ねぇ、まーた偉い天狗の仕業か…",
/* to be translated */						"って草薙の剣！？　こいつ、もしや",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, player_texture01[3], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 10 ){
					let text = [
/* to be translated */						"違う意味での共通点ならあるわね",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[3], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 2, text, count, 1 );
				}
				case( 11 ){
					let text = [
/* to be translated */						"この結界の向こうに剣があるのだ。",
/* to be translated */						"剣の呼ぶ声が、私には聞こえる",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[3], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager_Reverse( [ CenX+32+mpos[0], CenY+32+mpos[1] ], 2, text, count, 0 );
				}
				case( 12 ){
					let text = [
/* to be translated */						"成る程、確かに貴方の剣はこちらの世界にあります。",
/* to be translated */						"しかし、貴方に渡せるかどうかはその理由次第ね",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[3], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 4, text, count, 1 );
				}
				case( 13 ){
					let text = [
/* to be translated */						"こんな物が結界を超えて入って来てご覧なさい、",
/* to be translated */						"幻想郷は水没だわ",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[3], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 4, text, count, 1 );
				}
				case( 14 ){
					let text = [
/* to be translated */						"そうか…",
/* to be translated */						"ならば私一人だけでも剣を取りに行く。",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[3], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, enemy_texture01[0], 512 );
					CreateBalloonManager_Reverse( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 15 ){
					let text = [
/* to be translated */						"　さあ、どくのだ！",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[3], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", false, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager_Reverse( [ CenX+96+mpos[0], CenY+32+mpos[1] ], 1, text, count, 0 );
				}
				case( 16 ){
					let text = [
/* to be translated */						"言っても聞かない難しいお年頃ね。",
/* to be translated */						"そうそう、霊夢にもそんな頃があってね…",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[3], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 0.48, count, player_texture02[3], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 3, text, count, 1 );
				}
				case( 17 ){
					let text = [
/* to be translated */						"あら、私は今でも言っても聞かないわ。",
/* to be translated */						"あと歴史を捏造するな",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, player_texture01[7], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 0.48, count, player_texture02[3], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 18 ){
					let text = [
/* to be translated */						"そう、なら霊夢、",
/* to be translated */						"その子の覚悟を試す必要は無いわ、見逃しなさい",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[7], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 4, text, count, 1 );
				}
				case( 19 ){
					let text = [
/* to be translated */						"ええ、言っても聞かないから試してやるわ",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, player_texture01[6], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 20 ){
					let text = [
/* to be translated */						"海の下にも都はあれど、",
/* to be translated */						"人は太陽が無くば生きられぬ。",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[6], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager_Reverse( [ CenX+32+mpos[0], CenY+32+mpos[1] ], 2, text, count, 0 );
					_PlayMusic();
				}
				case( 21 ){
					let text = [
/* to be translated */						"この国を武士の手から取り戻すとか、",
/* to be translated */						"剣の威光を以て纏め上げるとか、",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[6], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", false, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager_Reverse( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 22 ){
					let text = [
/* to be translated */						"そんな小難しい事はもう良いのだ。",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[6], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", false, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager_Reverse( [ CenX+32+mpos[0], CenY+32+mpos[1] ], 2, text, count, 0 );
				}
				case( 23 ){
					let text = [
/* to be translated */						"私は…",
/* to be translated */						"私達はただ地上で平和に暮らしたいだけ！",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[6], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", false, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager_Reverse( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 24 ){
					let text = [
/* to be translated */						"栄華は終わった、あんたはもう死んでるのよ。",
/* to be translated */						"あんたの鎮魂歌は付喪神どもに弾かせてやる！",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, player_texture01[1], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 4, text, count, 0 );
				}
				case( 25 ){
					let text = [
/* to be translated */						"[ruby rb=\"深海に眠る星の記憶\" rt=\"ヨグ＝ソトース\"]よ！",
/* to be translated */						"私に[ruby rb=\"禁断の叡智\" rt=\"たたかうちから\"]を与え給え！",
					];
					CreateCharacterTexture( [ CenX-96+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[1], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager_Reverse( [ CenX+32+mpos[0], CenY+32+mpos[1] ], 2, text, count, 0 );
				}
				others{
					SetAreaCommonData("Talk", "counter", 0 );
					ObjEnemy_SetLife( CallID, 0 );
					break;
				}
			}
			
			//　移動ウェイト
			if( count == 5 ){
				count = WaitForZeroSpeed( CallID, count );
				SetAreaCommonData("Talk", "counter", count );
			}
			
			//　カウンタ加算
			frame++;
			if( ObjMove_GetSpeed(CallID) <= 0 && count != 5 ){ ctr++; }
			else{ ctr = 0; }
			
			//　ｼｮｯﾄｷｰで会話進行
			if( GetVirtualKeyState(VK_SHOT) == KEY_PUSH && ctr > 8 ){
				count++;
				frame = 0;
				ctr = 0;
				SetAreaCommonData("Talk", "counter", count );
			}
			
			//　ショットキー長押しで会話早送り
			if( GetVirtualKeyState(VK_USER1) == KEY_HOLD ){ timer++; }
			else{ timer = 0; }
			if( timer > 50 && ctr > 4 ){
				count++;
				frame = 0;
				ctr = 0;
				SetAreaCommonData("Talk", "counter", count );
			}
			
			yield;
		}
		SetForbidPlayerShot( false );
		SetForbidPlayerSpell( false );
	}
	
	task _PlayMusic(){
		//　引数2に情報セット　ｲﾍﾞﾝﾄ側でその情報を取り出す
		//　[ テクスチャ番号(0~2), 画像rect番号 ]
		NotifyEventAll( EV_USER + 2, [ 1, 1 ] );
		//　流れている曲を削除
		DeleteMusic();
		//　BGM再生
		PlayMusic( 8, true, 0 );
	}
	
	//　速度 0 まで待機
	function WaitForZeroSpeed( ID, count ){
		//　移動
		ObjMove_SetDestAtWeight(ID, CenX, CenY-96, 8, 8 );
		//　速度 0 まで待機
		while( ObjMove_GetSpeed(ID) > 0 ){ yield; }
		//　1秒待機
		loop( 30 ){ yield; }
		//　カウント + 1 を返す
		return count + 1;
	}
