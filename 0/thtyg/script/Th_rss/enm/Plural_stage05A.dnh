//#東方弾幕風[Plural]
#ScriptVersion[3]
#Title["桃源宮　stage5 用　連続スクリプト　野見埴得"]
#Text[""]
#Image[""]
#Background[""]
#BGM[""]
#System["script/Th_rss/system/System_Main.dnh"]
	
	let csd			= GetCurrentScriptDirectory();
	let objScene;
	let MinX		= 0;
	let MinY		= 0;
	let MaxX		= GetStgFrameWidth();
	let MaxY		= GetStgFrameHeight();
	let CenX		= GetStgFrameWidth()/2;
	let CenY		= GetStgFrameHeight()/2;

	let GetDifficult	= GetAreaCommonData("System", "Difficulty", "Normal" );
	
	//　Plural用の便利そうなやつ色々
	#include "./../lib/lib_Plural.dnh"
	//　各スペルカードSingleスクリプトへのパス
	#include "./SpellCardPath.dnh"
	
	@Initialize{
		objScene = ObjEnemyBossScene_Create();
		TPlural();
	}
	
	@Loading{
		//　弾データ読み込み　ALPHAとADD
		//LoadEnemyShotData( csd ~ "./../lib/lib_bullet_data.dnh" );
		//LoadEnemyShotData( csd ~ "./../lib/lib_bullet_data_ADD.dnh" );
	}
	
	@MainLoop{
		yield;
	}
	
	@Finalize{ }
	
	task TPlural(){
		if( GetDifficult == "OverDrive" ){
			ObjEnemyBossScene_Add(objScene, 0, csd ~ "./enm05/05_C_OverDrive.dnh" );
		}else{
			ObjEnemyBossScene_Add(objScene, 0, csd ~ "./enm05/05_C_Normal_01.dnh" );
			ObjEnemyBossScene_Add(objScene, 0, SpellCardPath_stage05[0] );
		}
		
		//　別スレッドでロード（？）
		ObjEnemyBossScene_LoadInThread( objScene );
		//　ボス出撃OKまで待機
		while( !GetCommonData("RegistBoss", false ) ){ yield; }
		//　出撃フラグをfalseに
		SetCommonData("RegistBoss", false );
		//　ボス出撃
		ObjEnemyBossScene_Regist( objScene );
		
		let AllBoss		= GetEnemyBossObjectID();
		
		//　左上 敵の名前表示
		EnemyNameDisplay(objScene, [128,192,255], 6, -1 );
		//　敵の持ってるスペカ量
		ascent( let i in 0..ObjEnemyBossScene_GetInfo(objScene, INFO_REMAIN_STEP_COUNT ) ){
			EnemySpellDisplay(objScene, i );
		}
		
		let pos;
		
		//敵ボスシーンが終了するまで待機
		while( !Obj_IsDeleted(objScene) ){
			AllBoss = GetEnemyBossObjectID();
			if( length(AllBoss) > 0 ){
				pos = [ObjMove_GetX(AllBoss[0]),ObjMove_GetY(AllBoss[0])];
			}
			yield;
		}
		
		//　ボムエクステンド放出
		NotifyEventAll( EV_USER + 39, pos );
		
		//　画面震動
		WorldShake( 60, 8 );
		
		//　引数2に座標をセット　ｲﾍﾞﾝﾄ側でその情報を取り出す
		NotifyEventAll( EV_USER + 1, pos );
		
		wait( 90 );				//　待機
		WorldShake( 60, 12 );	//　画面震動
		
		wait( 120 );			//　2秒待機
		
		//スクリプト終了
		CloseScript( GetOwnScriptID() );
	}
