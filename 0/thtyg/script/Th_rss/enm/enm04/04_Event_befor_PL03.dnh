//#東方弾幕風
#ScriptVersion[3]
#Title["桃源宮　stage4　会話　布都"]
#Text[""]
#System["script/Th_rss/system/System_Main.dnh"]
#Image[""]
#Background[""]
	
	//　ライブラリ管理ファイル
	#include "./../lib_Control.dnh"
	#include "./lib_enm04_setting.dnh"
	#include "./../../lib/lib_balloon.dnh"
	
	let enm;
	let spl;
	
	//　カウンタ
	let frame		= 0;
	let count		= 0;
	let timer		= 0;
	
	//　制限時間
	let SET_TIMER	= 999;
	
	@Initialize{
		//　ボス生成
		enm	= ObjEnemy_Create(OBJ_ENEMY_BOSS);
		ObjEnemy_SetDamageRate(enm, 0, 0 );
		ObjEnemy_Regist(enm);
		
		//　画面外で待機
		ObjMove_SetPosition(enm, MaxX+128, MinY-128 );
		
		//　初期化
		EnemyInitialize(enm);
		
		//　体力0まで待機
		EndEnemy_Event(enm);
		
		//　削除上限
		SetShotAutoDeleteClip( 64, 64, 64, 64 );
	}
	
	@Loading{ }
	
	@MainLoop{
		
		//　会話タスク呼び出し
		if( frame == 120 ){
			Main(enm);
		}
		
		//　カウンタ
		if( !Obj_IsDeleted(enm) ){
			count++;
			frame++;
			timer++;
		}
		else{
			//　0でなんか発動すると困るので変な数値にする
			count	= -52149;
			frame	= -52149;
			timer	= -52149;
		}
		
		yield;
	}
	
	@Event{
		alternative( GetEventType() )
		case( EV_REQUEST_LIFE ){
			//　ライフ一律1000
			SetScriptResult( 1000 );
		}
	}
	
	@Finalize{ }
	
	//----------------------------------------------------------------------------------------------------
	//----------------------------------------------------------------------------------------------------
	//　task色々
	
	task EnemyInitialize(ID){
		//　アニメーション用共通データ作成
		CreateCommonDataArea("anime");
		SetAreaCommonData("anime","spa",false);
		
		//　画像パスだけ変えればいいんじゃないかな
		EnemyDisplay_Enm04a( enm, true, enemy_tex_path );
	}
	
	function wait( long ){
		loop( long ){ yield; }
	}
	
	task Main(CallID){
		let frame	= 0;
		let count	= 0;
		let ctr		= 0;
		let mpos	= [ 0, 24 ];
		
		let enm_pos = [ 280, 64 ];
		
		//　自機組のテクスチャ　01がプレイヤー　02がパートナー
		let player_texture01 = [
			player_tex[37],player_tex[38],player_tex[39],player_tex[40],player_tex[41],
			player_tex[42],player_tex[43],player_tex[44],player_tex[45],player_tex[46],
			player_tex[47],
		];
		let player_texture02 = [
			player_tex[31],player_tex[32],player_tex[33],player_tex[34],player_tex[35],
			player_tex[36],
		];
		
		//　敵のテクスチャ
		let enemy_texture01 = [
			chara_tex[32],chara_tex[33],chara_tex[34],chara_tex[35],chara_tex[36],
			chara_tex[37],chara_tex[38],
		];
		
		//　共通データ作成　会話カウンタ作成
		CreateCommonDataArea("Talk");
		SetAreaCommonData("Talk", "counter", count );
		
		while( !Obj_IsDeleted(CallID) ){
			SetForbidPlayerShot( true );
			SetForbidPlayerSpell( true );
			
			//　会話表示
			if( frame == 1 ){
				alternative( count )
				case( 0 ){
					let text = [
/* to be translated */						"これは海ですな？",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [true,false], "front", false, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [true,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 1, text, count, 0 );
				}
				case( 1 ){
					let text = [
/* to be translated */						"こんな物が入りかけておったとは、",
/* to be translated */						"賢者もさぞ慌てようという物",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "front", false, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 2, text, count, 0 );
				}
				case( 2 ){
					let text = [
/* to be translated */						"うむ、海は実に広くて大きい。",
/* to be translated */						"河勝も海から来たぞ、キリスト教を携えてな。",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 4, text, count, 1 );
				}
				case( 3 ){
					let text = [
/* to be translated */						"そして私はキリスト教を知ろうと、",
/* to be translated */						"妹子を海の向こうへ送り出した。",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 3, text, count, 1 );
				}
				case( 4 ){
					let text = [
/* to be translated */						"遣隋使に見せかけた遣景使よ",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", false, [0,0,0], 0.48, count, player_texture02[1], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 2, text, count, 1 );
				}
				case( 5 ){
					let text = [
/* to be translated */						"そうか、還るべき[ruby rb=\"約束の地\" rt=\"カナン\"]はそなた達か",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 0.48, count, player_texture02[1], 512 );
					CreateBalloonManager_Reverse( [ CenX+mpos[0], CenY-128+mpos[1] ], 3, text, count, 0 );
				}
				case( 6 ){
				}
				case( 7 ){
					let text = [
/* to be translated */						"桃源宮にも流れ着いていた。",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [true,false], "back", false, [0,0,0], 1, count, player_texture01[0], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [true,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [true,false], "front", true, [0,0,0], 1, count, enemy_texture01[0], 512 );
					CreateBalloonManager_Reverse( [ CenX+32+mpos[0], CenY+32+mpos[1] ], 2, text, count, 0 );
				}
				case( 8 ){
					let text = [
/* to be translated */						"遠く河南を目指し、",
/* to be translated */						"また[ruby rb=\"祖国\" rt=\"カナン\"]へ還らんと沈んだ遣唐使の御霊",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[0], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", false, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager_Reverse( [ CenX+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 9 ){
					let text = [
/* to be translated */						"何とめでたき剣を持つ童女。",
/* to be translated */						"では、おぬしは剣闘士とやらの頭領か",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, player_texture01[3], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 10 ){
					let text = [
/* to be translated */						"私は草薙の剣を継ぐ者、",
/* to be translated */						"水天宮皇女",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[3], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager_Reverse( [ CenX+32+mpos[0], CenY+32+mpos[1] ], 1, text, count, 0 );
					DisplayEnemyName01( enm, [ 340+mpos[0], 200+mpos[1] ], 4, 180 );
				}
				case( 11 ){
					let text = [
/* to be translated */						"くさ…なぎ…？",
/* to be translated */						"あっ、あわっ、あわわわわわ",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[3], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 0.48, count, player_texture02[5], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 2, text, count, 1 );
				}
				case( 12 ){
					let text = [
/* to be translated */						"た、太子様！？　お気を確かに！",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, player_texture01[6], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 0.48, count, player_texture02[5], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 2, text, count, 0 );
				}
				case( 13 ){
					let text = [
/* to be translated */						"ふふ、そうか読めたぞ皇女。",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[6], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 0.48, count, player_texture02[1], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 2, text, count, 1 );
				}
				case( 14 ){
					let text = [
/* to be translated */						"君は滅びし一族の恨みを晴らす為に、",
/* to be translated */						"失った草薙の剣を求めておるのか",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[6], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", false, [0,0,0], 0.48, count, player_texture02[1], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 3, text, count, 1 );
				}
				case( 15 ){
					let text = [
/* to be translated */						"物知りで知られる聖徳王とお見受けするが、",
/* to be translated */						"本物はあまり大した事が無いようだ",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[6], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 0.48, count, player_texture02[1], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager_Reverse( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 16 ){
					let text1 = [
						"　　なん…",
						"NULL",
					];
					let text2 = [
						"　　だと…？",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 0.48, count, player_texture02[5], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 1, text1, count, 0 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 1, text2, count, 1 );
				}
				case( 17 ){
					let text = [
/* to be translated */						"それは確かに、王である水天宮皇女に託された使命。",
/* to be translated */						"しかし私個人が望んだ事ではないのだ。",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 0.48, count, player_texture02[5], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager_Reverse( [ CenX-64+mpos[0], CenY+32+mpos[1] ], 4, text, count, 0 );
				}
				case( 18 ){
					let text = [
/* to be translated */						"私はただの人間なのだ。",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[5], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", false, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager_Reverse( [ CenX+64+mpos[0], CenY+32+mpos[1] ], 1, text, count, 0 );
				}
				case( 19 ){
					let text = [
/* to be translated */						"不老不死だとか全知全能だとか、",
/* to be translated */						"そんな事を求められたくはなかった",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[5], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", false, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager_Reverse( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 20 ){
					let text = [
/* to be translated */						"私とは正反対の考えだな。",
/* to be translated */						"しかし、それも分かる。",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 2, text, count, 1 );
				}
				case( 21 ){
					let text = [
/* to be translated */						"人の心はそんなに都合よく強く出来てはいない。",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", false, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 4, text, count, 1 );
				}
				case( 22 ){
					let text = [
/* to be translated */						"幻想郷で平和に余生を過ごすも良かろう。",
/* to be translated */						"しかし、この大海を置く場所は無いだろうな。",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", false, [0,0,0], 0.48, count, player_texture02[1], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 4, text, count, 1 );
				}
				case( 23 ){
					let text = [
/* to be translated */						"そこで我らが道教に入る事で仙界のトンネr",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "front", false, [0,0,0], 0.48, count, player_texture02[1], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[2], 512 );
					CreateBalloonManager( [ CenX-96+mpos[0], CenY+128+mpos[1] ], 3, text, count, 1 );
				}
				case( 24 ){
					let text = [
/* to be translated */						"これは私達の[ruby rb=\"自由への闘争\" rt=\"レジスタンス\"]。",
/* to be translated */						"さあ、草薙の剣は何処なのだ",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, player_texture01[4], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 0.48, count, player_texture02[0], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager_Reverse( [ CenX+32+mpos[0], CenY+32+mpos[1] ], 2, text, count, 0 );
					
					_PlayMusic();
				}
				case( 25 ){
					let text = [
/* to be translated */						"　　そう急くな。",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, player_texture01[1], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[1], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 1, text, count, 0 );
				}
				case( 26 ){
					let text = [
/* to be translated */						"太子様は迷えるおぬしを",
/* to be translated */						"道教に導こうとお考えの様子。",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "front", false, [0,0,0], 1, count, player_texture01[1], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[1], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 2, text, count, 0 );
				}
				case( 27 ){
					let text = [
/* to be translated */						"では及ばずながらこの物部が、",
						"NULL",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "front", false, [0,0,0], 1, count, player_texture01[1], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[1], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 2, text, count, 0 );
				}
				case( 28 ){
					let text = [
/* to be translated */						"道教（と物部の秘術）の素晴らしさを",
/* to be translated */						"とくと見せてやるぞ！",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "front", false, [0,0,0], 1, count, player_texture01[5], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[1], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "back", false, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager( [ CenX-32+mpos[0], CenY+32+mpos[1] ], 3, text, count, 0 );
				}
				case( 29 ){
					let text = [
/* to be translated */						"姉君より新たに賜った[ruby rb=\"呪剣\" rt=\"ソウルセーバー\"]よ！",
/* to be translated */						"私に[ruby rb=\"禁断の叡智\" rt=\"たたかうちから\"]を与え給え！",
					];
					CreateCharacterTexture( [ CenX-64+mpos[0], CenY+64+mpos[1] ], [false,false], "back", true, [0,0,0], 1, count, player_texture01[5], 512 );
					CreateCharacterTexture( [ CenX-128+mpos[0], CenY+64+mpos[1] ], [false,false], "back", false, [0,0,0], 0.48, count, player_texture02[1], 512 );
					CreateCharacterTexture( [ CenX+enm_pos[0]+mpos[0], CenY+enm_pos[1]+mpos[1] ], [false,false], "front", true, [0,0,0], 1, count, enemy_texture01[1], 512 );
					CreateBalloonManager_Reverse( [ CenX+mpos[0], CenY+32+mpos[1] ], 2, text, count, 0 );
				}
				others{
					SetAreaCommonData("Talk", "counter", 0 );
					ObjEnemy_SetLife( CallID, 0 );
					break;
				}
			}
			
			//　移動ウェイト
			if( count == 6 ){
				count = WaitForZeroSpeed( CallID, count );
				SetAreaCommonData("Talk", "counter", count );
			}
			
			//　カウンタ加算
			frame++;
			if( ObjMove_GetSpeed(CallID) <= 0 && count != 6 ){ ctr++; }
			else{ ctr = 0; }
			
			//　ｼｮｯﾄｷｰで会話進行
			if( GetVirtualKeyState(VK_SHOT) == KEY_PUSH && ctr > 8 ){
				count++;
				frame = 0;
				ctr = 0;
				SetAreaCommonData("Talk", "counter", count );
			}
			
			//　ショットキー長押しで会話早送り
			if( GetVirtualKeyState(VK_USER1) == KEY_HOLD ){ timer++; }
			else{ timer = 0; }
			if( timer > 50 && ctr > 4 ){
				count++;
				frame = 0;
				ctr = 0;
				SetAreaCommonData("Talk", "counter", count );
			}
			
			yield;
		}
		SetForbidPlayerShot( false );
		SetForbidPlayerSpell( false );
	}
	
	task _PlayMusic(){
		//　引数2に情報セット　ｲﾍﾞﾝﾄ側でその情報を取り出す
		//　[ テクスチャ番号(0~2), 画像rect番号 ]
		NotifyEventAll( EV_USER + 2, [ 1, 1 ] );
		//　流れている曲を削除
		DeleteMusic();
		//　BGM再生
		PlayMusic( 8, true, 0 );
	}
	
	//　速度 0 まで待機
	function WaitForZeroSpeed( ID, count ){
		//　移動
		ObjMove_SetDestAtWeight(ID, CenX, CenY-96, 8, 8 );
		//　速度 0 まで待機
		while( ObjMove_GetSpeed(ID) > 0 ){ yield; }
		//　1秒待機
		loop( 30 ){ yield; }
		//　カウント + 1 を返す
		return count + 1;
	}
